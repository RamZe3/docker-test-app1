version: '3'

services:
    api:
        container_name: api_backend
        build:
            context: ./api
            dockerfile: Dockerfile.dev
        command: npm run start
        volumes:
            - ./api/plot:/app/plot/
        restart: unless-stopped
        environment:
            - PORT=8082
        depends_on:
            - postgres

    frontend:
        container_name: frontend
        build:
            context: ./frontend
            dockerfile: Dockerfile.dev
        command: serve -s dist -l 3000
        restart: unless-stopped
        depends_on:
            - api
            
    postgres:
        container_name: db_backend
        image: postgres:14-alpine
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - ./postgres_data:/var/lib/postgresql/data/
        ports:
            - "5432:5432"
        
    pgadmin:
        container_name: pgadmin12
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
            PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT: 'False'
            PGADMIN_CONFIG_WTF_CSRF_ENABLED: 'False'
        ports:
            - "5050:80"

    nginx:
        image: nginx:1.27.0-alpine
        container_name: nginx
        env_file:
            - .env
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
        depends_on:
            - frontend
            - postgres
            - api
