version: '3'

services:
    api:
        container_name: api_backend
        build: ./api
        command: npm run start
        restart: unless-stopped
        ports:
            - "8082:8082"
        environment:
            - PORT=8082
        depends_on:
            - postgres
        #volumes:
            #- plot_files:/plot
    
    frontend:
        container_name: frontend
        build: ./frontend
        command: npm run serve
        restart: unless-stopped
        ports:
            - "8081:8081"
        environment:
            - PORT=8081
        depends_on:
            - api
            
    postgres:
        container_name: db_backend
        #build: ./postgres
        image: postgres:14-alpine
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: Qwerty100
            POSTGRES_DB: gnuplot_db
        volumes:
            - ./postgres_data:/var/lib/postgresql/data/
        ports:
            - "5432:5432"

    #gnuplot:
        #container_name: gnuplot
        #image: remuslazar/gnuplot
        #environment:
            #GNUPLOT_PATH: $(pwd):/work remuslazar/gnuplot -e \
        #volumes:
            #- ./postgres_data:/var/lib/postgresql/data/
        #ports:
           #- "5555:5555"
        
    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: noemail@noemail.com
            PGADMIN_DEFAULT_PASSWORD: Qwerty100
            PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT: 'False'
            PGADMIN_CONFIG_WTF_CSRF_ENABLED: 'False'
        ports:
            - "5050:80"
#volumes:
    #plot_files:
